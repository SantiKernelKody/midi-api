"""Add autoincrement to IDs

Revision ID: 0d5bf913cfa7
Revises: e53116613489
Create Date: 2024-07-24 23:18:35.640437

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0d5bf913cfa7'
down_revision: Union[str, None] = 'e53116613489'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('course', 'school_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('course', 'reviewer_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('course', 'subject_name',
               existing_type=sa.VARCHAR(length=128),
               nullable=False)
    op.create_foreign_key(None, 'course', 'educational_entity', ['school_id'], ['id'])
    op.create_foreign_key(None, 'course', 'dashboard_user', ['reviewer_id'], ['id'])
    op.alter_column('player_level', 'score',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=10, asdecimal=2),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('player_level', 'score',
               existing_type=sa.Float(precision=10, asdecimal=2),
               type_=sa.REAL(),
               existing_nullable=True)
    op.drop_constraint(None, 'course', type_='foreignkey')
    op.drop_constraint(None, 'course', type_='foreignkey')
    op.alter_column('course', 'subject_name',
               existing_type=sa.VARCHAR(length=128),
               nullable=True)
    op.alter_column('course', 'reviewer_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('course', 'school_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###
